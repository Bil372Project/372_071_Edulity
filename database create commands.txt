create TABLE SCHOOL(name VARCHAR2(15) PRIMARY KEY,
                    school_type VARCHAR2(15) NOT NULL,
                    school_address VARCHAR2(50) NOT NULL)

create TABLE EMPLOYEE(Employee_id  VARCHAR2(15),
                      school_name ,
                      FOREIGN KEY (school_name) REFERENCES SCHOOL(name),
                      PRIMARY KEY ( Employee_id, school_name),
                      ssn VARCHAR2(50) NOT NULL,
                      name VARCHAR2(50) NOT NULL
                      )

 create TABLE TEACHING_STAFF(school_name,
                             employee_id,
                             FOREIGN KEY (employee_id,school_name) REFERENCES EMPLOYEE(Employee_id,school_name),
                             PRIMARY KEY(employee_id,school_name),
                             Specialization VARCHAR2(50) NOT NULL,
                             Office_no VARCHAR2(50) NOT NULL
                             )
create TABLE PARENT(ssn  VARCHAR2(30) PRIMARY KEY,
                     name VARCHAR2(30),
                     phone_number VARCHAR2(30),
                    address VARCHAR2(30),
                    email VARCHAR2(30)
                     )

create TABLE HEAD_OF_DEPARTMENT(school_name,
                                employee_id,
                                FOREIGN KEY(employee_id,school_name) REFERENCES EMPLOYEE(Employee_id,school_name),
                                PRIMARY KEY(employee_id,school_name))

create TABLE SURVEY(survey_id VARCHAR2(20) PRIMARY KEY,
                    school_name,
                    hod_employee_id,
                    FOREIGN KEY(school_name,hod_employee_id) REFERENCES HEAD_OF_DEPARTMENT(school_name,employee_id),
                    parent_ssn,
                    FOREIGN KEY(parent_ssn) REFERENCES PARENT(ssn))

create TABLE SURVEY_QUESTION(survey_id,
                             FOREIGN KEY(survey_id) REFERENCES SURVEY(survey_id),
                              score  integer,
                             question VARCHAR2(20))
create TABLE TEACHER(school_name,
                     employee_id,
                     survey_id,
                     hod_employee_id,
                     FOREIGN KEY(school_name,employee_id) REFERENCES EMPLOYEE(school_name,employee_id),
                     FOREIGN KEY(survey_id) REFERENCES SURVEY(survey_id),
                     FOREIGN KEY(school_name,hod_employee_id) REFERENCES HEAD_OF_DEPARTMENT(school_name,employee_id),
                     PRIMARY KEY(school_name,employee_id))
create TABLE CLASS(
                     school_name,
                     section integer,
                     schedule VARCHAR2(50),
                     class_size integer,
                     FOREIGN KEY(school_name) REFERENCES SCHOOL(name),
                     PRIMARY KEY(school_name,section)
)

create TABLE COURSE(
                       course_name  VARCHAR2(30),
                       grade integer,
                       type VARCHAR2(10),
                       teacher_employee_id,
                       school_name,
                       FOREIGN KEY(teacher_employee_id,school_name) REFERENCES TEACHER(employee_id,school_name),
                       PRIMARY KEY(course_name,grade))
create TABLE SYLLABUS(
                       semester VARCHAR2(30),
                       grading_info,
                       hod_employee_id,
                       course_name,
                       school_name,
                       FOREIGN KEY(hod_employee_id,school_name) REFERENCES HEAD_OF_DEPARTMENT(employee_id,school_name),
                       FOREIGN KEY(course_name,grading_info) REFERENCES COURSE(course_name,grade),
                       PRIMARY KEY(semester,course_name))
create TABLE SYLLABUS_SUBJECT_LIST(
                        semester,
                        course_name,
                        subject VARCHAR2(50),
                        FOREIGN KEY(semester,course_name) REFERENCES SYLLABUS(semester,course_name),
                        PRIMARY KEY (semester,subject)
)
create TABLE SYLLABUS_EXAM_DATE(
                       semester,
                       course_name,
                       subject Date,
                       FOREIGN KEY(semester,course_name) REFERENCES SYLLABUS(semester,course_name),
                       PRIMARY KEY(semester,subject)
)
create TABLE SCHEDULE(
                    schedule_id VARCHAR2(30) PRIMARY KEY
)
create TABLE HAVE_SCHEDULE(
                 class_section,
                 school_name,
                 schedule_id VARCHAR2(30),
                 FOREIGN KEY(school_name,class_section) REFERENCES CLASS(school_name,section),
                 PRIMARY KEY (class_section,school_name)
)
create TABLE SCHEDULE_CONSISTS_OF(
                schedule_id,
                course_name,
                grade,
                start_date Date,
                end_date Date,
                FOREIGN KEY(course_name,grade) REFERENCES COURSE(course_name,grade),
                FOREIGN KEY(schedule_id) REFERENCES SCHEDULE(schedule_id),
                PRIMARY KEY(schedule_id,course_name)
)
create TABLE HOMEWORK(
             hw_number integer,
             due_date Date,
             teacher_employee_id,
             school_name,
             class_section,
             FOREIGN KEY(school_name,teacher_employee_id) REFERENCES TEACHER(school_name,employee_id),
             FOREIGN KEY(school_name,class_section) REFERENCES CLASS(school_name,section),
            PRIMARY KEY(hw_number)
)
create TABLE LIST_OF_HW_QUESTIONS(
            question VARCHAR(50),
            hw_number,
            FOREIGN KEY(hw_number) REFERENCES HOMEWORK(hw_number),
            PRIMARY KEY(hw_number,question)
)
create TABLE ANNOUNCEMENT(
            submit_date Date PRIMARY KEY,
            due_date Date,
            info VARCHAR(30),
            teacher_employee_id,
            school_name,
            class_section,
            FOREIGN KEY(school_name,teacher_employee_id) REFERENCES TEACHER(school_name,employee_id),
            FOREIGN KEY(school_name,class_section) REFERENCES CLASS(school_name,section)
)
create TABLE DRIVER(
            id VARCHAR(30) PRIMARY KEY,
            ssn VARCHAR(30),
            phone_number VARCHAR(30)
)
create TABLE SCHOOL_BUS(
                       id integer PRIMARY KEY,
                       driver_id,
                       license_plate VARCHAR2(30),
                        destination  VARCHAR2(30),
                        capacity integer,
                       school_name,
                       FOREIGN KEY(school_name) REFERENCES SCHOOL(name),
                       FOREIGN KEY(driver_id) REFERENCES DRIVER(id)
)
create TABLE STOP(
                    stop_id VARCHAR2(30) PRIMARY KEY ,
                    stop_name VARCHAR2(30)
)
create TABLE SCHOOL_BUS_STOPS(
                        school_bus_id,
                        stop_id,
                        FOREIGN KEY (school_bus_id) REFERENCES SCHOOL_BUS(id),
                        FOREIGN KEY (stop_id) REFERENCES STOP(stop_id),
                        PRIMARY KEY(school_bus_id,stop_id)
)
create TABLE STUDENT(
                    school_name,
                    student_id VARCHAR2(30),
                    name VARCHAR2(30),
                    number_of_absent integer,
                    year integer,
                    birth_date Date,
                    birth_place VARCHAR2(30),
                    class_section,
                    parent_ssn,
                    school_bus_id,
                    FOREIGN KEY(school_name,class_section) REFERENCES CLASS(school_name,section),
                    FOREIGN KEY(parent_ssn) REFERENCES PARENT(ssn),
                    FOREIGN KEY (school_bus_id) REFERENCES SCHOOL_BUS(id),
                    PRIMARY KEY(school_name,student_id)
)
create TABLE LIST_OF_ABSENT_DATES(
                    school_name,
                    student_id,
                    absent_date Date,
                    FOREIGN KEY(school_name,student_id) REFERENCES STUDENT(student_id,school_name),
                    PRIMARY KEY(absent_date,school_name,student_id)
)
create TABLE LUNCH(
                    day Date,
                    student_id,
                    school_name,
                    FOREIGN KEY (student_id,school_name) REFERENCES STUDENT(student_id,school_name),
                    PRIMARY KEY(day)
            )
create TABLE LUNCH_MENU(
                     lunch_day Date,
                     food VARCHAR2(30),
                     FOREIGN KEY(lunch_day) REFERENCES LUNCH(day),
                     PRIMARY KEY(lunch_day,food)

)